/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ae.ui.bo;

import ae.config.configuration;
import ae.dao.api.IKategoriDao;
import ae.model.EventOrganizer;
import ae.model.Kategori;
import ae.ui.fo.FO4_PendaftaranEO;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aditya
 */
public class Frm3_Kategori extends javax.swing.JFrame {

    /**
     * Creates new form Frm_SignUp_User
     */
    public Frm3_Kategori() {
        initComponents();
        init_Kategori_Dao();
        init_TableKategori();
        init_Kategori_ID();
        loadDaftarKategori();
    }

    private DefaultTableModel tabmode;
    private IKategoriDao kategoriDao = null;
    private final Object[] DaftarKategoricolumNames = {"ID Kategori", "Nama Kategori"};
    private final DefaultTableModel tableModelKategori = new DefaultTableModel();
    private List<Kategori> recordKategori = new ArrayList<Kategori>();

    private void init_Kategori_Dao() {
        String url = "rmi://" + configuration.ip_server + ":1099/kategoriDao";
        try {
            //ambil referensi dari remote objek yang ada di server
            kategoriDao = (IKategoriDao) Naming.lookup(url);
        } catch (NotBoundException | MalformedURLException ex) {
            Logger.getLogger(Frm3_Kategori.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            //Logger.getLogger(FrmSupplier.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Koneksi ke Service" + url + "[GAGAL], cek kembali app server", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void init_TableKategori() {
        //set header table
        tableModelKategori.setColumnIdentifiers(DaftarKategoricolumNames);
        tbl_kategori.setModel(tableModelKategori);
        tbl_kategori.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    private void init_Kategori_ID() {
        Kategori K = new Kategori();
        try {
            String hasil = kategoriDao.GenerateIDKategori(K);
            if (hasil == null) {
                //do something
            } else {
                txt_id_kategori.setText(hasil);
            }
        } catch (RemoteException ex) {
            Logger.getLogger(Frm3_Kategori.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadDaftarKategori() {
        try {
            // reset data di tabel
            tableModelKategori.setRowCount(0);
            // mengambil data barang dari server
            // kemudian menyimpannya ke objek list
            recordKategori = kategoriDao.getAll();
            // ekstrak data barang yg ada di dalam objek list
            // kemudian menampilkannya ke objek tabel
            for (Kategori K : recordKategori) {
                // ambil nomor urut terakhir
                Object[] objects = new Object[DaftarKategoricolumNames.length];
                objects[0] = K.getId_kat();
                objects[1] = K.getNama_kat();
                // tambahkan data barang ke dalam tabel
                tableModelKategori.addRow(objects);
            }
        } catch (RemoteException ex) {
            Logger.getLogger(Frm3_Kategori.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void ClearFormKategori() {
        txt_kategori.setText("");
        init_Kategori_ID();
        txt_kategori.requestFocus();
        init_TableKategori();
        loadDaftarKategori();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        btn_back = new javax.swing.JLabel();
        btn_hapus = new javax.swing.JLabel();
        btn_update = new javax.swing.JLabel();
        btn_reset = new javax.swing.JLabel();
        btn_save = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_kategori = new javax.swing.JTable();
        txt_kategori = new javax.swing.JTextField();
        txt_id_kategori = new javax.swing.JTextField();
        Bg_Pendaftaran_User = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Amikom Event");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ae/image/btn_kembali2.png"))); // NOI18N
        btn_back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_backMouseClicked(evt);
            }
        });
        getContentPane().add(btn_back, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 530, -1, -1));

        btn_hapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ae/image/btn_hapus.png"))); // NOI18N
        btn_hapus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_hapus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_hapusMouseClicked(evt);
            }
        });
        getContentPane().add(btn_hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 530, -1, -1));

        btn_update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ae/image/btn_update.png"))); // NOI18N
        btn_update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_updateMouseClicked(evt);
            }
        });
        getContentPane().add(btn_update, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 530, -1, -1));

        btn_reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ae/image/btn_reset3.png"))); // NOI18N
        btn_reset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_resetMouseClicked(evt);
            }
        });
        getContentPane().add(btn_reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 530, -1, -1));

        btn_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ae/image/btn_simpan5.png"))); // NOI18N
        btn_save.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_saveMouseClicked(evt);
            }
        });
        getContentPane().add(btn_save, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 530, -1, -1));

        tbl_kategori.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_kategori.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_kategoriMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_kategori);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 170, 760, 320));
        getContentPane().add(txt_kategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, 250, 30));

        txt_id_kategori.setEnabled(false);
        getContentPane().add(txt_id_kategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 250, 250, 30));

        Bg_Pendaftaran_User.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ae/image/Bg_Kategori.png"))); // NOI18N
        getContentPane().add(Bg_Pendaftaran_User, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_backMouseClicked
        // TODO add your handling code here:
        int reply = JOptionPane.showConfirmDialog(null, "Apakah Anda Ingin Kembali Ke Menu ?", "Information", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {

            Frm1_Menu Menu = new Frm1_Menu();
            Menu.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_btn_backMouseClicked

    private void btn_resetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_resetMouseClicked
        // TODO add your handling code here:
        ClearFormKategori();
    }//GEN-LAST:event_btn_resetMouseClicked

    private void btn_saveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_saveMouseClicked
        // TODO add your handling code here:

        if (txt_kategori.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Tambahkan Nama Kategori", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            Kategori K = new Kategori();
            K.setId_kat(txt_id_kategori.getText());
            K.setNama_kat(txt_kategori.getText());
            try {
                int hasil = kategoriDao.saveDataKategori(K);
                if (hasil == 1) {
                    JOptionPane.showMessageDialog(null, "Save Data Success", "Save Success", JOptionPane.INFORMATION_MESSAGE);
                    ClearFormKategori();
                } else {
                    evt.consume();
                    getToolkit().beep();
                    JOptionPane.showMessageDialog(null, "Save Data Failed", "Save Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (RemoteException ex) {
                Logger.getLogger(Frm3_Kategori.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btn_saveMouseClicked

    private void btn_hapusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_hapusMouseClicked
        // TODO add your handling code here:
        Kategori K = new Kategori();
        K.setId_kat(txt_id_kategori.getText());
        K.setNama_kat(txt_kategori.getText());
        try {
            int hasil = kategoriDao.deletekategori(K);
            if (hasil == 1) {
                JOptionPane.showMessageDialog(null, "Hapus Data Success", "Save Success", JOptionPane.INFORMATION_MESSAGE);
                ClearFormKategori();
            } else {
                evt.consume();
                getToolkit().beep();
                JOptionPane.showMessageDialog(null, "Hapus Data Failed", "Save Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (RemoteException ex) {
            Logger.getLogger(Frm3_Kategori.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_hapusMouseClicked

    private void tbl_kategoriMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_kategoriMouseClicked
        // TODO add your handling code here:
        int baris = tbl_kategori.getSelectedRow();
        int kolom = tbl_kategori.getSelectedColumn();
        String ID = tbl_kategori.getValueAt(baris, 0).toString();
        String NamaKategori = tbl_kategori.getValueAt(baris, 1).toString();

        txt_id_kategori.setText(ID);
        txt_kategori.setText(NamaKategori);
    }//GEN-LAST:event_tbl_kategoriMouseClicked

    private void btn_updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_updateMouseClicked
        // TODO add your handling code here:
        Kategori K = new Kategori();
        K.setId_kat(txt_id_kategori.getText());
        K.setNama_kat(txt_kategori.getText());
        try {
            int hasil = kategoriDao.updatekategori(K);
            if (hasil == 1) {
                JOptionPane.showMessageDialog(null, "Update Data Sukses", "Save Success", JOptionPane.INFORMATION_MESSAGE);
                ClearFormKategori();
            } else {
                evt.consume();
                getToolkit().beep();
                JOptionPane.showMessageDialog(null, "Update Data Gagal", "Save Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (RemoteException ex) {
            Logger.getLogger(Frm3_Kategori.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_updateMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frm3_Kategori.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frm3_Kategori.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frm3_Kategori.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frm3_Kategori.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frm3_Kategori().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Bg_Pendaftaran_User;
    private javax.swing.JLabel btn_back;
    private javax.swing.JLabel btn_hapus;
    private javax.swing.JLabel btn_reset;
    private javax.swing.JLabel btn_save;
    private javax.swing.JLabel btn_update;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_kategori;
    private javax.swing.JTextField txt_id_kategori;
    private javax.swing.JTextField txt_kategori;
    // End of variables declaration//GEN-END:variables
}
