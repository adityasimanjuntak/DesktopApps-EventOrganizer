/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ae.ui.bo;

import ae.ui.fo.*;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Aditya
 */
public class Extension_Chat_Client extends javax.swing.JFrame {

    /**
     * Creates new form Extension_Chat_Client
     */
    public Extension_Chat_Client() {
        initComponents();
        setDefaultCloseOperation(Extension_Chat_Client.DISPOSE_ON_CLOSE);
    }
    String username;
    ArrayList<String> users = new ArrayList();
    Boolean isConnected = false;
    int port = 2222;
    Socket sock;
    BufferedReader reader;
    PrintWriter writer;
    private String address;

    //--------------------------//
    public void ListenThread() {
        Thread IncomingReader = new Thread(new IncomingReader());
        IncomingReader.start();
    }

    public class IncomingReader implements Runnable {

        @Override
        public void run() {
            String[] data;
            String stream, done = "Done", connect = "Connect", disconnect = "Disconnect", chat = "Chat";

            try {
                while ((stream = reader.readLine()) != null) {
                    data = stream.split(":");

                    if (data[2].equals(chat)) {
                        ta_chat.append(data[0] + ": " + data[1] + "\n");
                        ta_chat.setCaretPosition(ta_chat.getDocument().getLength());
                    } else if (data[2].equals(connect)) {
                        ta_chat.removeAll();
                        userAdd(data[0]);
                    } else if (data[2].equals(disconnect)) {
                        userRemove(data[0]);
                    } else if (data[2].equals(done)) {
                        //users.setText("");
                        writeUsers();
                        users.clear();
                    }
                }
            } catch (Exception ex) {
            }
        }
    }
    //--------------------------//

    public void userAdd(String data) {
        users.add(data);
    }

    //--------------------------//
    public void userRemove(String data) {
        ta_chat.append(data + " Saat ini Offline.\n");
    }

    //--------------------------//
    public void writeUsers() {
        String[] tempList = new String[(users.size())];
        users.toArray(tempList);
        for (String token : tempList) {
            //users.append(token + "\n");
        }
    }

    //--------------------------//
    public void sendDisconnect() {
        String bye = (username + ": :Disconnect");
        try {
            writer.println(bye);
            writer.flush();
        } catch (Exception e) {
            ta_chat.append("Could not send Disconnect message.\n");
        }
    }

    //--------------------------//
    public void Disconnect() {
        try {
            ta_chat.append("Keluar Dari Obrolan.\n");
            sock.close();
        } catch (Exception ex) {
            ta_chat.append("Gagal Membuat Koneksi. \n");
        }
        isConnected = false;
        txt_username.setEditable(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_send = new javax.swing.JLabel();
        txt_chat = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_chat = new javax.swing.JTextArea();
        txt_password = new javax.swing.JPasswordField();
        txt_port = new javax.swing.JTextField();
        txt_username = new javax.swing.JTextField();
        txt_address = new javax.swing.JTextField();
        btn_cek_ip = new javax.swing.JLabel();
        btn_disconnect = new javax.swing.JLabel();
        btn_connect = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        bg_chatnow = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chat Now");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_send.setFont(new java.awt.Font("Gotham Light", 0, 14)); // NOI18N
        btn_send.setForeground(new java.awt.Color(255, 255, 255));
        btn_send.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ae/image/chat_press.png"))); // NOI18N
        btn_send.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_send.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_sendMouseClicked(evt);
            }
        });
        getContentPane().add(btn_send, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 365, -1, -1));

        txt_chat.setColumns(20);
        txt_chat.setRows(5);
        getContentPane().add(txt_chat, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, 320, 30));

        ta_chat.setColumns(20);
        ta_chat.setRows(5);
        jScrollPane1.setViewportView(ta_chat);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 380, 280));
        getContentPane().add(txt_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 450, 90, -1));

        txt_port.setEnabled(false);
        getContentPane().add(txt_port, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 417, 90, -1));
        getContentPane().add(txt_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 447, 100, -1));

        txt_address.setEnabled(false);
        getContentPane().add(txt_address, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 417, 100, -1));

        btn_cek_ip.setFont(new java.awt.Font("Gotham Light", 0, 14)); // NOI18N
        btn_cek_ip.setForeground(new java.awt.Color(255, 255, 255));
        btn_cek_ip.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ae/image/chat_btn_cek_ip.png"))); // NOI18N
        btn_cek_ip.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_cek_ip.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_cek_ipMouseClicked(evt);
            }
        });
        getContentPane().add(btn_cek_ip, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 480, -1, -1));

        btn_disconnect.setFont(new java.awt.Font("Gotham Light", 0, 14)); // NOI18N
        btn_disconnect.setForeground(new java.awt.Color(255, 255, 255));
        btn_disconnect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ae/image/chat_btn_disconnect.png"))); // NOI18N
        btn_disconnect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_disconnect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_disconnectMouseClicked(evt);
            }
        });
        getContentPane().add(btn_disconnect, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 480, -1, -1));

        btn_connect.setFont(new java.awt.Font("Gotham Light", 0, 14)); // NOI18N
        btn_connect.setForeground(new java.awt.Color(255, 255, 255));
        btn_connect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ae/image/chat_btn_connect.png"))); // NOI18N
        btn_connect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_connect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_connectMouseClicked(evt);
            }
        });
        getContentPane().add(btn_connect, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 480, -1, -1));

        jLabel5.setFont(new java.awt.Font("Gotham Light", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Port");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 420, -1, -1));

        jLabel4.setFont(new java.awt.Font("Gotham Light", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Password");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 450, -1, -1));

        jLabel3.setFont(new java.awt.Font("Gotham Light", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Username");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, -1, -1));

        jLabel2.setFont(new java.awt.Font("Gotham Light", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Address");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 420, -1, -1));

        bg_chatnow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ae/image/templatechatnew.png"))); // NOI18N
        getContentPane().add(bg_chatnow, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_connectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_connectMouseClicked
        // TODO add your handling code here:
        address = "localhost";
        if (isConnected == false) {
            username = txt_username.getText();
            txt_username.setEditable(false);

            try {
                sock = new Socket(address, port);
                InputStreamReader streamreader = new InputStreamReader(sock.getInputStream());
                reader = new BufferedReader(streamreader);
                writer = new PrintWriter(sock.getOutputStream());
                writer.println(username + ":Bergabung.:Connect");
                writer.flush();
                isConnected = true;
            } catch (Exception ex) {
                ta_chat.append("Tidak Dapat Bergabung Ke Obrolan! Coba Lagi. \n");
                txt_username.setEditable(true);
            }

            ListenThread();

        } else if (isConnected == true) {
            ta_chat.append("Anda Sudah Terhubung. \n");
        }
    }//GEN-LAST:event_btn_connectMouseClicked

    private void btn_disconnectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_disconnectMouseClicked
        // TODO add your handling code here:
        int reply = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin mengakhiri Chat ?", "Disconnect", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            sendDisconnect();
            Disconnect();
        }

    }//GEN-LAST:event_btn_disconnectMouseClicked

    private void btn_sendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_sendMouseClicked
        // TODO add your handling code here:
        String nothing = "";
        if ((txt_chat.getText()).equals(nothing)) {
            txt_chat.setText("");
            txt_chat.requestFocus();
        } else {
            try {
                writer.println(username + ":" + txt_chat.getText() + ":" + "Chat");
                writer.flush(); // flushes the buffer
            } catch (Exception ex) {
                txt_chat.append((String) "Pesan Tidak Terkirim. \n");
            }
            txt_chat.setText("");
            txt_chat.requestFocus();
        }

        txt_chat.setText("");
        txt_chat.requestFocus();
    }//GEN-LAST:event_btn_sendMouseClicked

    private void btn_cek_ipMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_cek_ipMouseClicked
        // TODO add your handling code here:
        try {
            InetAddress getIP = InetAddress.getLocalHost();
            txt_address.setText(getIP.getHostAddress());
            txt_port.setText(String.valueOf(port));
        } catch (UnknownHostException salah) {
            JOptionPane.showMessageDialog(null, salah);
        }
    }//GEN-LAST:event_btn_cek_ipMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Extension_Chat_Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Extension_Chat_Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Extension_Chat_Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Extension_Chat_Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Extension_Chat_Client().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bg_chatnow;
    private javax.swing.JLabel btn_cek_ip;
    private javax.swing.JLabel btn_connect;
    private javax.swing.JLabel btn_disconnect;
    private javax.swing.JLabel btn_send;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea ta_chat;
    private javax.swing.JTextField txt_address;
    private javax.swing.JTextArea txt_chat;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JTextField txt_port;
    private javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables
}
